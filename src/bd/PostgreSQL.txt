CREATE TABLE tbusuario (
  idusuario SERIAL NOT NULL,
  nome VARCHAR(100) NOT NULL,
  mail VARCHAR(100) NOT NULL,
  senha VARCHAR(100) NOT NULL,
  PRIMARY KEY(idusuario),
  UNIQUE(mail)
);


drop table if exists tbavaliacao;
drop table if exists tbquestao;
drop table if exists tbresposta;
drop table if exists tbquestionario;
drop table if exists tbquestao_por_questionario;

CREATE TABLE tbavaliacao (
  idavaliacao SERIAL PRIMARY KEY,
  nome VARCHAR(100) NOT NULL,
  descricao TEXT
);

-- Tabela de Questões
CREATE TABLE tbquestao (
  idquestao SERIAL PRIMARY KEY,
  idavaliacao INT NOT NULL,
  materia VARCHAR(50) NOT NULL,
  enunciado TEXT NOT NULL,
  FOREIGN KEY(idavaliacao) REFERENCES tbavaliacao(idavaliacao)
);

-- Tabela de Respostas
CREATE TABLE tbresposta (
  idresposta SERIAL PRIMARY KEY,
  idquestao INT NOT NULL,
  texto TEXT NOT NULL,
  correta BOOLEAN NOT NULL,
  FOREIGN KEY(idquestao) REFERENCES tbquestao(idquestao)
);

-- Tabela de Questionários
CREATE TABLE tbquestionario (
  idquestionario SERIAL PRIMARY KEY,
  idusuario INT NOT NULL,
  datahorario TIMESTAMP DEFAULT NOW() NOT NULL,
  nota FLOAT,
  FOREIGN KEY(idusuario) REFERENCES tbusuario(idusuario)
);

-- Tabela de Questões por Questionário (Relacionamento N:N entre Questões e Questionários)
CREATE TABLE tbquestao_por_questionario (
  idquestao INT NOT NULL,
  idquestionario INT NOT NULL,
  idresposta INT,  -- Resposta fornecida pelo usuário
  PRIMARY KEY(idquestao, idquestionario),
  FOREIGN KEY(idquestao) REFERENCES tbquestao(idquestao),
  FOREIGN KEY(idquestionario) REFERENCES tbquestionario(idquestionario),
  FOREIGN KEY(idresposta) REFERENCES tbresposta(idresposta)
);

